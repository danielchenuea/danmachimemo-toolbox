{"version":3,"file":"js/107.3b76343e.js","mappings":"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","sources":["webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/styles/_common.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/styles/light.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/src/CheckMark.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/src/LineMark.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/src/CheckboxGroup.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/src/styles/index.cssr.js","webpack://danmemo-toolbox/./node_modules/naive-ui/es/checkbox/src/Checkbox.js"],"sourcesContent":["export default {\n    sizeSmall: '14px',\n    sizeMedium: '16px',\n    sizeLarge: '18px',\n    labelPadding: '0 8px'\n};\n","import { changeColor } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport commonVariables from './_common';\nexport const self = (vars) => {\n    const { baseColor, inputColorDisabled, cardColor, modalColor, popoverColor, textColorDisabled, borderColor, primaryColor, textColor2, fontSizeSmall, fontSizeMedium, fontSizeLarge, borderRadiusSmall, lineHeight } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { labelLineHeight: lineHeight, fontSizeSmall,\n        fontSizeMedium,\n        fontSizeLarge, borderRadius: borderRadiusSmall, color: baseColor, colorChecked: primaryColor, colorDisabled: inputColorDisabled, colorDisabledChecked: inputColorDisabled, colorTableHeader: cardColor, colorTableHeaderModal: modalColor, colorTableHeaderPopover: popoverColor, checkMarkColor: baseColor, checkMarkColorDisabled: textColorDisabled, checkMarkColorDisabledChecked: textColorDisabled, border: `1px solid ${borderColor}`, borderDisabled: `1px solid ${borderColor}`, borderDisabledChecked: `1px solid ${borderColor}`, borderChecked: `1px solid ${primaryColor}`, borderFocus: `1px solid ${primaryColor}`, boxShadowFocus: `0 0 0 2px ${changeColor(primaryColor, { alpha: 0.3 })}`, textColor: textColor2, textColorDisabled });\n};\nconst checkboxLight = {\n    name: 'Checkbox',\n    common: commonLight,\n    self\n};\nexport default checkboxLight;\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 64 64\", class: \"check-icon\" },\n    h(\"path\", { d: \"M50.42,16.76L22.34,39.45l-8.1-11.46c-1.12-1.58-3.3-1.96-4.88-0.84c-1.58,1.12-1.95,3.3-0.84,4.88l10.26,14.51  c0.56,0.79,1.42,1.31,2.38,1.45c0.16,0.02,0.32,0.03,0.48,0.03c0.8,0,1.57-0.27,2.2-0.78l30.99-25.03c1.5-1.21,1.74-3.42,0.52-4.92  C54.13,15.78,51.93,15.55,50.42,16.76z\" })));\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 100 100\", class: \"line-icon\" },\n    h(\"path\", { d: \"M80.2,55.5H21.4c-2.8,0-5.1-2.5-5.1-5.5l0,0c0-3,2.3-5.5,5.1-5.5h58.7c2.8,0,5.1,2.5,5.1,5.5l0,0C85.2,53.1,82.9,55.5,80.2,55.5z\" })));\n","import { h, defineComponent, provide, computed, toRef, ref, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useFormItem } from '../../_mixins';\nimport { call, createInjectionKey, warnOnce } from '../../_utils';\nexport const checkboxGroupInjectionKey = createInjectionKey('n-checkbox-group');\nexport const checkboxGroupProps = {\n    min: Number,\n    max: Number,\n    size: String,\n    value: Array,\n    defaultValue: {\n        type: Array,\n        default: null\n    },\n    disabled: {\n        type: Boolean,\n        default: undefined\n    },\n    'onUpdate:value': [Function, Array],\n    onUpdateValue: [Function, Array],\n    // deprecated\n    onChange: [Function, Array]\n};\nexport default defineComponent({\n    name: 'CheckboxGroup',\n    props: checkboxGroupProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('checkbox-group', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef } = useConfig(props);\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = computed(() => props.value);\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const checkedCount = computed(() => {\n            var _a;\n            return ((_a = mergedValueRef.value) === null || _a === void 0 ? void 0 : _a.length) || 0;\n        });\n        const valueSetRef = computed(() => {\n            if (Array.isArray(mergedValueRef.value)) {\n                return new Set(mergedValueRef.value);\n            }\n            return new Set();\n        });\n        function toggleCheckbox(checked, checkboxValue) {\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            if (Array.isArray(mergedValueRef.value)) {\n                const groupValue = Array.from(mergedValueRef.value);\n                const index = groupValue.findIndex((value) => value === checkboxValue);\n                if (checked) {\n                    if (!~index) {\n                        groupValue.push(checkboxValue);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                        uncontrolledValueRef.value = groupValue;\n                        // deprecated\n                        if (onChange)\n                            call(onChange, groupValue);\n                    }\n                }\n                else {\n                    if (~index) {\n                        groupValue.splice(index, 1);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (onChange)\n                            call(onChange, groupValue); // deprecated\n                        uncontrolledValueRef.value = groupValue;\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                    }\n                }\n            }\n            else {\n                if (checked) {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, [checkboxValue]); // deprecated\n                    uncontrolledValueRef.value = [checkboxValue];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n                else {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, []); // deprecated\n                    uncontrolledValueRef.value = [];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n            }\n        }\n        provide(checkboxGroupInjectionKey, {\n            checkedCountRef: checkedCount,\n            maxRef: toRef(props, 'max'),\n            minRef: toRef(props, 'min'),\n            valueSetRef,\n            disabledRef: mergedDisabledRef,\n            mergedSizeRef,\n            toggleCheckbox\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef\n        };\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-checkbox-group`, role: \"group\" }, this.$slots));\n    }\n});\n","import { c, cB, cE, cM, insideModal, insidePopover } from '../../../_utils/cssr';\nimport { iconSwitchTransition } from '../../../_styles/transitions/icon-switch.cssr'; // vars:\n// --n-label-line-height\n// --n-bezier\n// --n-size\n// --n-border\n// --n-border-focus\n// --n-border-checked\n// --n-border-disabled\n// --n-border-disabled-checked\n// --n-box-shadow-focus\n// --n-color\n// --n-color-checked\n// --n-color-table\n// --n-color-table-modal\n// --n-color-disabled\n// --n-color-disabled-checked\n// --n-text-color\n// --n-text-color-disabled\n// --n-check-mark-color\n// --n-check-mark-color-disabled\n// --n-check-mark-color-disabled-checked\n// --n-border-radius\n// --n-font-size\n// --n-label-padding\n\nexport default c([cB('checkbox', `\n line-height: var(--n-label-line-height);\n font-size: var(--n-font-size);\n outline: none;\n cursor: pointer;\n display: inline-flex;\n flex-wrap: nowrap;\n align-items: flex-start;\n word-break: break-word;\n --n-merged-color-table: var(--n-color-table);\n `, [c('&:hover', [cB('checkbox-box', [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-focus);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cM('inside-table', [cB('checkbox-box', `\n background-color: var(--n-merged-color-table);\n `)]), cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-checked);\n `, [cB('checkbox-icon', [// if not set width to 100%, safari & old chrome won't display the icon\nc('.check-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('indeterminate', [cB('checkbox-box', [cB('checkbox-icon', [c('.check-icon', `\n opacity: 0;\n transform: scale(.5);\n `), c('.line-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('checked, indeterminate', [c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-checked);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cB('checkbox-box', `\n background-color: var(--n-color-checked);\n border-left: 0;\n border-top: 0;\n `, [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), cM('disabled', {\n  cursor: 'not-allowed'\n}, [cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-disabled-checked);\n `, [cE('border', {\n  border: 'var(--n-border-disabled-checked)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled-checked)'\n})])])]), cB('checkbox-box', `\n background-color: var(--n-color-disabled);\n `, [cE('border', {\n  border: 'var(--n-border-disabled)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled)'\n})])]), cE('label', {\n  color: 'var(--n-text-color-disabled)'\n})]), cB('checkbox-box-wrapper', `\n position: relative;\n width: var(--n-size);\n flex-shrink: 0;\n flex-grow: 0;\n user-select: none;\n -webkit-user-select: none;\n `), cB('checkbox-box', `\n position: absolute;\n left: 0;\n top: 50%;\n transform: translateY(-50%);\n height: var(--n-size);\n width: var(--n-size);\n display: inline-block;\n box-sizing: border-box;\n border-radius: var(--n-border-radius);\n background-color: var(--n-color);\n transition: background-color 0.3s var(--n-bezier);\n `, [cE('border', `\n transition:\n border-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n border-radius: inherit;\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n border: var(--n-border);\n `), cB('checkbox-icon', `\n display: flex;\n align-items: center;\n justify-content: center;\n position: absolute;\n left: 1px;\n right: 1px;\n top: 1px;\n bottom: 1px;\n `, [c('.check-icon, .line-icon', `\n width: 100%;\n fill: var(--n-check-mark-color);\n opacity: 0;\n transform: scale(0.5);\n transform-origin: center;\n transition:\n fill 0.3s var(--n-bezier),\n transform 0.3s var(--n-bezier),\n opacity 0.3s var(--n-bezier),\n border-color 0.3s var(--n-bezier);\n `), iconSwitchTransition({\n  left: '1px',\n  top: '1px'\n})])]), cE('label', `\n color: var(--n-text-color);\n transition: color .3s var(--n-bezier);\n user-select: none;\n -webkit-user-select: none;\n padding: var(--n-label-padding);\n `, [c('&:empty', {\n  display: 'none'\n})])]), // modal table header checkbox\ninsideModal(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-modal);\n `)), // popover table header checkbox\ninsidePopover(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-popover);\n `))]);","import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), { size: String, checked: {\n        type: [Boolean, String, Number],\n        default: undefined\n    }, defaultChecked: {\n        type: [Boolean, String, Number],\n        default: false\n    }, value: [String, Number], disabled: {\n        type: Boolean,\n        default: undefined\n    }, indeterminate: Boolean, label: String, focusable: {\n        type: Boolean,\n        default: true\n    }, checkedValue: {\n        type: [Boolean, String, Number],\n        default: true\n    }, uncheckedValue: {\n        type: [Boolean, String, Number],\n        default: false\n    }, 'onUpdate:checked': [Function, Array], onUpdateChecked: [Function, Array], \n    // private\n    privateInsideTable: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Checkbox',\n    props: checkboxProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n                }\n            });\n        }\n        const selfRef = ref(null);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const formItem = useFormItem(props, {\n            mergedSize(NFormItem) {\n                const { size } = props;\n                if (size !== undefined)\n                    return size;\n                if (NCheckboxGroup) {\n                    const { value: mergedSize } = NCheckboxGroup.mergedSizeRef;\n                    if (mergedSize !== undefined) {\n                        return mergedSize;\n                    }\n                }\n                if (NFormItem) {\n                    const { mergedSize } = NFormItem;\n                    if (mergedSize !== undefined)\n                        return mergedSize.value;\n                }\n                return 'medium';\n            },\n            mergedDisabled(NFormItem) {\n                const { disabled } = props;\n                if (disabled !== undefined)\n                    return disabled;\n                if (NCheckboxGroup) {\n                    if (NCheckboxGroup.disabledRef.value)\n                        return true;\n                    const { maxRef: { value: max }, checkedCountRef } = NCheckboxGroup;\n                    if (max !== undefined &&\n                        checkedCountRef.value >= max &&\n                        !renderedCheckedRef.value) {\n                        return true;\n                    }\n                    const { minRef: { value: min } } = NCheckboxGroup;\n                    if (min !== undefined &&\n                        checkedCountRef.value <= min &&\n                        renderedCheckedRef.value) {\n                        return true;\n                    }\n                }\n                if (NFormItem) {\n                    return NFormItem.disabled.value;\n                }\n                return false;\n            }\n        });\n        const { mergedDisabledRef, mergedSizeRef } = formItem;\n        const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n        const uncontrolledCheckedRef = ref(props.defaultChecked);\n        const controlledCheckedRef = toRef(props, 'checked');\n        const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n        const renderedCheckedRef = useMemo(() => {\n            if (NCheckboxGroup) {\n                const groupValueSet = NCheckboxGroup.valueSetRef.value;\n                if (groupValueSet && props.value !== undefined) {\n                    return groupValueSet.has(props.value);\n                }\n                return false;\n            }\n            else {\n                return mergedCheckedRef.value === props.checkedValue;\n            }\n        });\n        const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n        function toggle(e) {\n            if (NCheckboxGroup && props.value !== undefined) {\n                NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n            }\n            else {\n                const { onChange, 'onUpdate:checked': _onUpdateCheck, onUpdateChecked } = props;\n                const { nTriggerFormInput, nTriggerFormChange } = formItem;\n                const nextChecked = renderedCheckedRef.value\n                    ? props.uncheckedValue\n                    : props.checkedValue;\n                if (_onUpdateCheck) {\n                    call(_onUpdateCheck, nextChecked, e);\n                }\n                if (onUpdateChecked) {\n                    call(onUpdateChecked, nextChecked, e);\n                }\n                if (onChange)\n                    call(onChange, nextChecked, e); // deprecated\n                nTriggerFormInput();\n                nTriggerFormChange();\n                uncontrolledCheckedRef.value = nextChecked;\n            }\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                toggle(e);\n            }\n        }\n        function handleKeyUp(e) {\n            if (mergedDisabledRef.value)\n                return;\n            switch (e.key) {\n                case ' ':\n                case 'Enter':\n                    toggle(e);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.key) {\n                case ' ':\n                    e.preventDefault();\n            }\n        }\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { borderRadius, color, colorChecked, colorDisabled, colorTableHeader, colorTableHeaderModal, colorTableHeaderPopover, checkMarkColor, checkMarkColorDisabled, border, borderFocus, borderDisabled, borderChecked, boxShadowFocus, textColor, textColorDisabled, checkMarkColorDisabledChecked, colorDisabledChecked, borderDisabledChecked, labelPadding, labelLineHeight, [createKey('fontSize', mergedSize)]: fontSize, [createKey('size', mergedSize)]: size } } = themeRef.value;\n            return {\n                '--n-label-line-height': labelLineHeight,\n                '--n-size': size,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-border-checked': borderChecked,\n                '--n-border-focus': borderFocus,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-disabled-checked': borderDisabledChecked,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-color': color,\n                '--n-color-checked': colorChecked,\n                '--n-color-table': colorTableHeader,\n                '--n-color-table-modal': colorTableHeaderModal,\n                '--n-color-table-popover': colorTableHeaderPopover,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-disabled-checked': colorDisabledChecked,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-check-mark-color': checkMarkColor,\n                '--n-check-mark-color-disabled': checkMarkColorDisabled,\n                '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n                '--n-font-size': fontSize,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(formItem, exposedMethods, {\n            rtlEnabled: rtlEnabledRef,\n            selfRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedDisabled: mergedDisabledRef,\n            renderedChecked: renderedCheckedRef,\n            mergedTheme: themeRef,\n            labelId: createId(),\n            handleClick,\n            handleKeyUp,\n            handleKeyDown,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        var _a;\n        const { $slots, renderedChecked, mergedDisabled, indeterminate, privateInsideTable, cssVars, labelId, label, mergedClsPrefix, focusable, handleKeyUp, handleKeyDown, handleClick } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-checkbox`,\n                this.themeClass,\n                this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`,\n                renderedChecked && `${mergedClsPrefix}-checkbox--checked`,\n                mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`,\n                indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`,\n                privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`\n            ], tabindex: mergedDisabled || !focusable ? undefined : 0, role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : renderedChecked, \"aria-labelledby\": labelId, style: cssVars, onKeyup: handleKeyUp, onKeydown: handleKeyDown, onClick: handleClick, onMousedown: () => {\n                on('selectstart', window, (e) => {\n                    e.preventDefault();\n                }, {\n                    once: true\n                });\n            } },\n            h(\"div\", { class: `${mergedClsPrefix}-checkbox-box-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: `${mergedClsPrefix}-checkbox-box` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.indeterminate ? (h(\"div\", { key: \"indeterminate\", class: `${mergedClsPrefix}-checkbox-icon` }, LineMark)) : (h(\"div\", { key: \"check\", class: `${mergedClsPrefix}-checkbox-icon` }, CheckMark))\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-checkbox-box__border` }))),\n            label !== null || $slots.default ? (h(\"span\", { class: `${mergedClsPrefix}-checkbox__label`, id: labelId }, $slots.default ? $slots.default() : label)) : null));\n    }\n});\n"],"names":["sizeSmall","sizeMedium","sizeLarge","labelPadding","vars","baseColor","inputColorDisabled","cardColor","modalColor","popoverColor","textColorDisabled","borderColor","primaryColor","textColor2","fontSizeSmall","fontSizeMedium","fontSizeLarge","borderRadiusSmall","lineHeight","Object","assign","labelLineHeight","borderRadius","color","colorChecked","colorDisabled","colorDisabledChecked","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","checkMarkColorDisabledChecked","border","borderDisabled","borderDisabledChecked","borderChecked","borderFocus","boxShadowFocus","alpha","textColor","checkboxLight","name","common","self","h","viewBox","class","d","checkboxGroupInjectionKey","checkboxGroupProps","min","Number","max","size","String","value","Array","defaultValue","type","default","disabled","Boolean","undefined","Function","onUpdateValue","onChange","props","setup","mergedClsPrefixRef","formItem","mergedSizeRef","mergedDisabledRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","checkedCount","_a","length","valueSetRef","isArray","Set","toggleCheckbox","checked","checkboxValue","nTriggerFormInput","nTriggerFormChange","_onUpdateValue","groupValue","from","index","findIndex","push","call","actionType","splice","checkedCountRef","maxRef","minRef","disabledRef","mergedClsPrefix","render","this","role","$slots","c","cB","cE","cM","cursor","fill","left","top","display","checkboxProps","defaultChecked","indeterminate","label","focusable","checkedValue","uncheckedValue","onUpdateChecked","privateInsideTable","selfRef","inlineThemeDisabled","mergedRtlRef","mergedSize","NFormItem","NCheckboxGroup","mergedDisabled","renderedCheckedRef","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","groupValueSet","has","themeRef","toggle","e","_onUpdateCheck","nextChecked","handleClick","handleKeyUp","key","handleKeyDown","preventDefault","exposedMethods","focus","blur","rtlEnabledRef","cssVarsRef","cubicBezierEaseInOut","fontSize","themeClassHandle","rtlEnabled","renderedChecked","mergedTheme","labelId","cssVars","themeClass","onRender","ref","tabindex","style","onKeyup","onKeydown","onClick","onMousedown","on","window","once","LineMark","CheckMark","id"],"sourceRoot":""}